/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.dispositivo;

import view.relatorio.TelaMeusRelatorios;
import view.relatorio.TelaDispositivoGeraRelatorio;
import dao.ContatoDAO;
import dao.DispositivoDAO;
import dao.MensagemDAO;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Font;
import java.io.File;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.TableCellRenderer;
import listmodel.JListModel;
import model.Consulta;
import model.Contato;
import model.Dispositivo;
import model.Mensagem;
import model.gerenciatela.GerenciaTelaDispositivo;
import tablemodel.TabelaModeloMensagem;
import util.ConverteData;
import view.timeline.TelaRankingMensagem;

/**
 *
 * @author BRUNA
 */
public class TelaPrincipalDispositivo extends javax.swing.JDialog {
    
    private final Dispositivo dispositivo;
    private Contato contatoSelecionado;
    private Consulta consulta;
    private List<Contato> contatos;
    private List<Contato> grupos;
    private List<Contato> resultados;
    private List<Mensagem> mensagens;
    
    
    /**
     * Creates new form TelaPrincipalDispositivo
     * @param parent
     * @param modal
     * @param dispositivo
     */
    public TelaPrincipalDispositivo(java.awt.Frame parent, boolean modal, Dispositivo dispositivo) {
        super(parent, modal);
        initComponents();
        this.dispositivo = dispositivo;
        
        gerenciaTela();
        configuraJTable();
        desabilitaComponentes();
        preencheComboFiltro();
        preenchePainelInformacao();
        preencheJListGrupos();
    }
    
    
    private void gerenciaTela(){
        GerenciaTelaDispositivo gt = new GerenciaTelaDispositivo();
        this.setSize(gt.getFramePrincipalDispositivo());
        this.setAlwaysOnTop(true);
        painelInformacao.setPreferredSize(gt.getPainelInformacao());
        painelContatos.setPreferredSize(gt.getPainelContatos());
        painelConversa.setPreferredSize(gt.getPainelConversa());
        scrollPaneTabelaConversa.setPreferredSize(gt.getTabelaConversa());
        painelFiltros.setPreferredSize(gt.getPainelFiltros());
    }
        
    private void preencheComboFiltro(){
        comboFiltro.removeAllItems();
        comboFiltro.addItem("Todos");
        comboFiltro.addItem("Contatos da agenda");
        comboFiltro.addItem("Contatos n√£o salvos");
    }
        
    private void configuraJTable(){
        tabelaMensagem.setFont(new Font("Tahoma", Font.PLAIN, 14));
        tabelaMensagem.getTableHeader().setFont(new Font("Tahoma", Font.BOLD, 14));
        tabelaMensagem.getTableHeader().setForeground(new Color(255,149,40));
        tabelaMensagem.setRowHeight(25);
    }
    
    private void desabilitaComponentes(){
        scrollPaneTabelaConversa.setVisible(false);
        tabelaMensagem.setVisible(false);
        labelTotalMensagens.setVisible(false);
        painelResultado.setVisible(false);
    }
        
    private void limpaCampos(){
        
    }
    
    private void preenchePainelInformacao(){
        Color color = new Color(255,149,40);
        labelDispositivo.setText(dispositivo.getNome());
        labelModelo.setText(dispositivo.getNumero_modelo()+" "+dispositivo.getModelo());
        labelVersaoAndroid.setText(dispositivo.getVersao_android());
        labelDispositivo.setForeground(color);
        labelModelo.setForeground(color);
        labelVersaoAndroid.setForeground(color);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelInformacao = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        labelDispositivo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelModelo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        labelVersaoAndroid = new javax.swing.JLabel();
        painelContatos = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        comboFiltro = new javax.swing.JComboBox<>();
        scrollPaneJListGrupos = new javax.swing.JScrollPane();
        jListGrupos = new javax.swing.JList<>();
        scrollPaneJListContatos = new javax.swing.JScrollPane();
        jListContatos = new javax.swing.JList<>();
        labelTotalContatos = new javax.swing.JLabel();
        labelTotalGrupos = new javax.swing.JLabel();
        painelConversa = new javax.swing.JPanel();
        scrollPaneTabelaConversa = new javax.swing.JScrollPane();
        tabelaMensagem = new javax.swing.JTable();
        labelTotalMensagens = new javax.swing.JLabel();
        painelFiltros = new javax.swing.JPanel();
        campoPesquisaPalavra = new javax.swing.JTextField();
        campoPesquisaDataInicial = new javax.swing.JFormattedTextField();
        campoPesquisaDataFinal = new javax.swing.JFormattedTextField();
        campoPesquisaHoraInicial = new javax.swing.JFormattedTextField();
        campoPesquisaHoraFinal = new javax.swing.JFormattedTextField();
        checkContatos = new javax.swing.JCheckBox();
        checkGrupos = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        botaoPesquisar = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        painelResultado = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        comboResultado = new javax.swing.JComboBox<>();
        botaoResultadoConversa = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuExibir = new javax.swing.JMenu();
        itemInformacaoDispositivo = new javax.swing.JMenuItem();
        itemExcluir = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        menuRelatorios = new javax.swing.JMenu();
        itemGerarRelatorio = new javax.swing.JMenuItem();
        itemMenusRelatorios = new javax.swing.JMenuItem();
        menuTimeLine = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PRINCIPAL DISPOSITIVO");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel1.setText("Dispositivo:");

        labelDispositivo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelDispositivo.setText("Dispositivo:");

        jLabel2.setText("Modelo:");

        labelModelo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelModelo.setText("Modelo:");

        jLabel3.setText("Android:");

        labelVersaoAndroid.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelVersaoAndroid.setText("Android:");

        javax.swing.GroupLayout painelInformacaoLayout = new javax.swing.GroupLayout(painelInformacao);
        painelInformacao.setLayout(painelInformacaoLayout);
        painelInformacaoLayout.setHorizontalGroup(
            painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInformacaoLayout.createSequentialGroup()
                .addGroup(painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelInformacaoLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelDispositivo))
                    .addGroup(painelInformacaoLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelModelo))
                    .addGroup(painelInformacaoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelVersaoAndroid)))
                .addGap(0, 52, Short.MAX_VALUE))
        );
        painelInformacaoLayout.setVerticalGroup(
            painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelInformacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDispositivo)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelModelo)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelInformacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(labelVersaoAndroid))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelContatos.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setText("Filtrar por:");

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboFiltroItemStateChanged(evt);
            }
        });

        scrollPaneJListGrupos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "GRUPOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(24, 62, 81))); // NOI18N

        jListGrupos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListGrupos.setSelectionBackground(new java.awt.Color(240, 235, 180));
        jListGrupos.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jListGrupos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListGruposMouseClicked(evt);
            }
        });
        scrollPaneJListGrupos.setViewportView(jListGrupos);

        scrollPaneJListContatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CONTATOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(24, 62, 81))); // NOI18N
        scrollPaneJListContatos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jListContatos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListContatos.setSelectionBackground(new java.awt.Color(240, 235, 180));
        jListContatos.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jListContatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListContatosMouseClicked(evt);
            }
        });
        scrollPaneJListContatos.setViewportView(jListContatos);

        labelTotalContatos.setText("Total: 0");

        labelTotalGrupos.setText("Total: 0");

        javax.swing.GroupLayout painelContatosLayout = new javax.swing.GroupLayout(painelContatos);
        painelContatos.setLayout(painelContatosLayout);
        painelContatosLayout.setHorizontalGroup(
            painelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelContatosLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFiltro, 0, 87, Short.MAX_VALUE))
                    .addComponent(scrollPaneJListContatos)
                    .addComponent(scrollPaneJListGrupos)
                    .addGroup(painelContatosLayout.createSequentialGroup()
                        .addGroup(painelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelTotalGrupos)
                            .addComponent(labelTotalContatos))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelContatosLayout.setVerticalGroup(
            painelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContatosLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(painelContatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneJListContatos, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelTotalContatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneJListGrupos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTotalGrupos)
                .addGap(8, 8, 8))
        );

        painelConversa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MENSAGENS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(24, 62, 81))); // NOI18N

        tabelaMensagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelaMensagem.setGridColor(new java.awt.Color(204, 204, 204));
        scrollPaneTabelaConversa.setViewportView(tabelaMensagem);

        labelTotalMensagens.setText("jLabel5");

        javax.swing.GroupLayout painelConversaLayout = new javax.swing.GroupLayout(painelConversa);
        painelConversa.setLayout(painelConversaLayout);
        painelConversaLayout.setHorizontalGroup(
            painelConversaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConversaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(scrollPaneTabelaConversa)
                .addContainerGap())
            .addGroup(painelConversaLayout.createSequentialGroup()
                .addComponent(labelTotalMensagens)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        painelConversaLayout.setVerticalGroup(
            painelConversaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConversaLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(scrollPaneTabelaConversa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelTotalMensagens))
        );

        painelFiltros.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Filtros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(24, 62, 81))); // NOI18N

        campoPesquisaPalavra.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPesquisaPalavra.setBorder(javax.swing.BorderFactory.createTitledBorder("Palavra"));

        campoPesquisaDataInicial.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Inicial"));
        try {
            campoPesquisaDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoPesquisaDataInicial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPesquisaDataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPesquisaDataInicialFocusLost(evt);
            }
        });

        campoPesquisaDataFinal.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Final"));
        try {
            campoPesquisaDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoPesquisaDataFinal.setEnabled(false);
        campoPesquisaDataFinal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPesquisaDataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPesquisaDataFinalFocusLost(evt);
            }
        });

        campoPesquisaHoraInicial.setBorder(javax.swing.BorderFactory.createTitledBorder("Hora Inicial"));
        try {
            campoPesquisaHoraInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoPesquisaHoraInicial.setEnabled(false);
        campoPesquisaHoraInicial.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPesquisaHoraInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPesquisaHoraInicialFocusLost(evt);
            }
        });

        campoPesquisaHoraFinal.setBorder(javax.swing.BorderFactory.createTitledBorder("Hora Final"));
        try {
            campoPesquisaHoraFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoPesquisaHoraFinal.setEnabled(false);
        campoPesquisaHoraFinal.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        campoPesquisaHoraFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoPesquisaHoraFinalFocusLost(evt);
            }
        });

        checkContatos.setText("Contatos");

        checkGrupos.setText("Grupos");

        botaoPesquisar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botaoPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/pesquisar teste.png"))); // NOI18N
        botaoPesquisar.setText("Pesquisar");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        botaoLimpar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botaoLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/limpar.png"))); // NOI18N
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        painelResultado.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));

        jScrollPane1.setBorder(null);

        jTextPane1.setBackground(new java.awt.Color(240, 240, 240));
        jTextPane1.setBorder(null);
        jTextPane1.setText("Selecione uma op√ß√£o para exibir a conversa");
        jScrollPane1.setViewportView(jTextPane1);

        botaoResultadoConversa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        botaoResultadoConversa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/abrirconversa.png"))); // NOI18N
        botaoResultadoConversa.setText("Abrir Conversa");
        botaoResultadoConversa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoResultadoConversaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelResultadoLayout = new javax.swing.GroupLayout(painelResultado);
        painelResultado.setLayout(painelResultadoLayout);
        painelResultadoLayout.setHorizontalGroup(
            painelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                    .addComponent(comboResultado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(painelResultadoLayout.createSequentialGroup()
                        .addComponent(botaoResultadoConversa)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelResultadoLayout.setVerticalGroup(
            painelResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelResultadoLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(comboResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoResultadoConversa, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout painelFiltrosLayout = new javax.swing.GroupLayout(painelFiltros);
        painelFiltros.setLayout(painelFiltrosLayout);
        painelFiltrosLayout.setHorizontalGroup(
            painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(painelResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelFiltrosLayout.createSequentialGroup()
                        .addComponent(botaoPesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(botaoLimpar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelFiltrosLayout.createSequentialGroup()
                        .addComponent(checkContatos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkGrupos))
                    .addComponent(campoPesquisaPalavra, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelFiltrosLayout.createSequentialGroup()
                        .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoPesquisaDataInicial, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                            .addComponent(campoPesquisaHoraInicial))
                        .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelFiltrosLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(campoPesquisaDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelFiltrosLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(campoPesquisaHoraFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelFiltrosLayout.setVerticalGroup(
            painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelFiltrosLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(campoPesquisaPalavra, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPesquisaDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPesquisaDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoPesquisaHoraInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoPesquisaHoraFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkContatos)
                    .addComponent(checkGrupos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(painelResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        menuExibir.setText("Dispositivo");

        itemInformacaoDispositivo.setText("Informa√ß√µes do dispositivo");
        itemInformacaoDispositivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemInformacaoDispositivoActionPerformed(evt);
            }
        });
        menuExibir.add(itemInformacaoDispositivo);

        itemExcluir.setText("Excluir");
        itemExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExcluirActionPerformed(evt);
            }
        });
        menuExibir.add(itemExcluir);

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuExibir.add(jMenuItem1);

        jMenuBar1.add(menuExibir);

        menuRelatorios.setText("Relat√≥rios");

        itemGerarRelatorio.setText("Gerar relat√≥rio");
        itemGerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemGerarRelatorioActionPerformed(evt);
            }
        });
        menuRelatorios.add(itemGerarRelatorio);

        itemMenusRelatorios.setText("Meus Relat√≥rios");
        itemMenusRelatorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemMenusRelatoriosActionPerformed(evt);
            }
        });
        menuRelatorios.add(itemMenusRelatorios);

        jMenuBar1.add(menuRelatorios);

        menuTimeLine.setText("Ranking de Mensagens");
        menuTimeLine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuTimeLineMouseClicked(evt);
            }
        });
        jMenuBar1.add(menuTimeLine);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelInformacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelContatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelConversa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelContatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(painelConversa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelInformacao, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboFiltroItemStateChanged
        switch (comboFiltro.getSelectedIndex()) {
            case 0: preencheJListContatos(0);
                    break;
            case 1: preencheJListContatos(1);
                    break;
            case 2: preencheJListContatos(2);
                    break;
            default: break;
        }
    }//GEN-LAST:event_comboFiltroItemStateChanged

    private void jListContatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListContatosMouseClicked
        if(evt.getClickCount() > 1 && !contatos.isEmpty()){
            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            contatoSelecionado = contatos.get(jListContatos.getSelectedIndex());
            carregaListaMensagem();
            getContentPane().setCursor(Cursor.getDefaultCursor());
            jListGrupos.clearSelection();
            limpaCampos();
        }
    }//GEN-LAST:event_jListContatosMouseClicked

    private void jListGruposMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListGruposMouseClicked
        if(evt.getClickCount() > 1 && !contatos.isEmpty()){
            getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            contatoSelecionado = grupos.get(jListGrupos.getSelectedIndex());
            carregaListaMensagem();
            getContentPane().setCursor(Cursor.getDefaultCursor());
            jListContatos.clearSelection();
        }
    }//GEN-LAST:event_jListGruposMouseClicked

    private void campoPesquisaDataFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisaDataFinalFocusLost
        if(campoPesquisaDataFinal.getText().equals("  /  /    ")){
            campoPesquisaDataFinal.setValue(null);
            campoPesquisaHoraInicial.setEnabled(true);
            campoPesquisaHoraFinal.setEnabled(false);
        }
        else{
            if(campoPesquisaDataInicial.getValue() == null){
                JOptionPane.showMessageDialog(this, "Preencha a data inicial!");
                campoPesquisaDataFinal.setValue(null);
            }
            else{
                campoPesquisaHoraInicial.setEnabled(false);
                campoPesquisaHoraFinal.setEnabled(false);
            }
        }
        
    }//GEN-LAST:event_campoPesquisaDataFinalFocusLost

    private void campoPesquisaHoraInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisaHoraInicialFocusLost
        if(campoPesquisaHoraInicial.getText().equals("  :  ")){
            campoPesquisaHoraInicial.setValue(null);
            campoPesquisaHoraFinal.setValue(null);
            campoPesquisaHoraFinal.setEnabled(false);
            campoPesquisaDataFinal.setEnabled(true);
        }
        else{
            campoPesquisaHoraFinal.setEnabled(true);
            campoPesquisaDataFinal.setEnabled(false);
        }
    }//GEN-LAST:event_campoPesquisaHoraInicialFocusLost

    private void campoPesquisaHoraFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisaHoraFinalFocusLost
        if(campoPesquisaHoraFinal.getText().equals("  :  ")){
            campoPesquisaHoraInicial.setValue(null);
            campoPesquisaHoraFinal.setValue(null);
            campoPesquisaHoraFinal.setEnabled(false);
            campoPesquisaDataFinal.setEnabled(true);
        }
    }//GEN-LAST:event_campoPesquisaHoraFinalFocusLost

    private void campoPesquisaDataInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoPesquisaDataInicialFocusLost
        if(campoPesquisaDataInicial.getText().equals("  /  /    ")){
            campoPesquisaDataInicial.setValue(null);
            campoPesquisaDataFinal.setEnabled(false);
            campoPesquisaHoraInicial.setEnabled(false);
            campoPesquisaHoraFinal.setEnabled(false);
        }
        else{
            campoPesquisaDataFinal.setValue(null);
            campoPesquisaDataFinal.setEnabled(true);
            campoPesquisaHoraInicial.setEnabled(true);
        }
    }//GEN-LAST:event_campoPesquisaDataInicialFocusLost

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed
        labelTotalMensagens.setVisible(false);
        preencheObjetoConsulta();
        
        if(!checkContatos.isSelected() && !checkGrupos.isSelected() && consulta.getContato() == null){
            JOptionPane.showMessageDialog(this, "Selecione a op√ß√£o Contatos e/ou Grupos!");
        }
        else{
            if(verificaCamposPreenchidos()){
                getContentPane().setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                MensagemDAO mensagemDAO = new MensagemDAO(this.dispositivo.getTabela_mensagem(), this.dispositivo.getTabela_contato());

                // 1 verifica se alguma conversa foi selecionada
                if(consulta.getContato() == null){ // PESQUISA TODAS AS MENSAGENS
                    scrollPaneTabelaConversa.setVisible(false);
                    this.resultados = mensagemDAO.filtraConsultaTodos(consulta);
                    carregaComboResultado();
                }
                else{ // CONSULTA POR CONTATO ESPECIFICO
                    this.mensagens.removeAll(this.mensagens);
                    this.mensagens = mensagemDAO.filtraConsultaContato(consulta);
                    preencheTabelaMensagem();
                }

                getContentPane().setCursor(Cursor.getDefaultCursor());
            }
            else{
                JOptionPane.showMessageDialog(this, "Para realizar a pesquisa √© necess√°rio preencher um filtro!");
            }
        }
    }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        desabilitaComponentes();
        comboResultado.removeAllItems();
        campoPesquisaPalavra.setText("");
        campoPesquisaDataInicial.setValue(null);
        campoPesquisaDataFinal.setValue(null);
        campoPesquisaHoraInicial.setValue(null);
        campoPesquisaHoraFinal.setValue(null);
        checkContatos.setSelected(false);
        checkGrupos.setSelected(false);
        jListContatos.clearSelection();
        jListGrupos.clearSelection();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoResultadoConversaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoResultadoConversaActionPerformed
        MensagemDAO mensagemDAO = new MensagemDAO(this.dispositivo.getTabela_mensagem(), this.dispositivo.getTabela_contato());
        consulta.setContato(resultados.get(comboResultado.getSelectedIndex()));
        this.mensagens = mensagemDAO.filtraConsultaContato(consulta);
        preencheTabelaMensagem();
    }//GEN-LAST:event_botaoResultadoConversaActionPerformed

    private void itemInformacaoDispositivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemInformacaoDispositivoActionPerformed
        new TelaInformacaoDispositivo(this, true, dispositivo).setVisible(true);
    }//GEN-LAST:event_itemInformacaoDispositivoActionPerformed

    private void itemGerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemGerarRelatorioActionPerformed
        new TelaDispositivoGeraRelatorio(this, false, dispositivo).setVisible(true);
    }//GEN-LAST:event_itemGerarRelatorioActionPerformed

    private void itemMenusRelatoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemMenusRelatoriosActionPerformed
        new TelaMeusRelatorios(this, false, dispositivo).setVisible(true);
    }//GEN-LAST:event_itemMenusRelatoriosActionPerformed

    private void menuTimeLineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuTimeLineMouseClicked
        new TelaRankingMensagem(this, true, dispositivo).setVisible(true);
    
    }//GEN-LAST:event_menuTimeLineMouseClicked

    private void itemExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExcluirActionPerformed
        int resposta = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir o dispositivo: "+dispositivo.getNome(), "EXCLUIR CASO", JOptionPane.YES_NO_CANCEL_OPTION);
            
        if(resposta == 0){
            DispositivoDAO dispositivoDAO = new DispositivoDAO();
            dispositivoDAO.excluir(dispositivo);
            File file = new File(dispositivo.getDiretorio());
            file.delete();
            JOptionPane.showMessageDialog(this, "Dispositivo exclu√≠do!");
            this.dispose();
        }
        
        
    }//GEN-LAST:event_itemExcluirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowGainedFocus

    
    private void preencheTabelaMensagem(){
        scrollPaneTabelaConversa.setVisible(true);
        labelTotalMensagens.setVisible(true);
        tabelaMensagem.setVisible(true);
        tabelaMensagem.setModel(new TabelaModeloMensagem(mensagens, dispositivo));
        
        for (int i = 0; i < tabelaMensagem.getColumnCount(); i++) {  
            tabelaMensagem.getColumnModel().getColumn(i).setCellRenderer(new TextAreaCellRenderer(this.mensagens));  
        } 
        preencheTotalMensagens();
    }
    
    
    private void preencheJListContatos(int indice){
        ContatoDAO contatoDAO = new ContatoDAO(dispositivo.getTabela_contato());
        
        switch (indice) {
            case 0: contatos = contatoDAO.pesquisaTodosContatos();
                    break;
            case 1: contatos = contatoDAO.pesquisaContatosAgenda();
                    break;
            case 2: contatos = contatoDAO.pesquisaContatosNaoSalvos();
                    break;
            default: break;
        }
        labelTotalContatos.setText("TOTAL: "+contatos.size());
        jListContatos.setModel(new JListModel(contatos));
    }
    
    
    private void preencheJListGrupos(){
        ContatoDAO contatoDAO = new ContatoDAO(dispositivo.getTabela_contato());
        grupos = contatoDAO.pesquisaGrupos();
        labelTotalGrupos.setText("TOTAL: "+grupos.size());
        jListGrupos.setModel(new JListModel(grupos));
    }
    
    
    private void carregaComboResultado(){
        comboResultado.removeAllItems();
        painelResultado.setVisible(true);
       
        for(Contato contato : this.resultados){
            comboResultado.addItem(contato);
        }
    }
    
   
    // carrega lista de mensagens
    private void carregaListaMensagem(){
        MensagemDAO mensagemDAO = new MensagemDAO(this.dispositivo.getTabela_mensagem(), this.dispositivo.getTabela_contato());
        this.mensagens = mensagemDAO.pesquisaMensagensPorContato(this.contatoSelecionado);
        preencheTabelaMensagem();
    }
    
    
    private void preencheTotalMensagens(){
        int contRecebidas = 0, contEnviadas = 0;
        
        for(int i = 0 ; i <mensagens.size() ; i++){
            if(mensagens.get(i).isKey_from_me()){ contEnviadas++; }
            
            else{ contRecebidas++; }
        }
       
        labelTotalMensagens.setText("Total: "+this.mensagens.size()+" | "+"Enviadas: "+contEnviadas+" | Recebidas: "+contRecebidas);
    }
    
    
    private void preencheObjetoConsulta(){
        consulta = new Consulta();
        
        if(campoPesquisaPalavra.getText().isEmpty()){ consulta.setPalavraChave(null); }
        else{ consulta.setPalavraChave(campoPesquisaPalavra.getText()); }
        
        if(campoPesquisaDataInicial.getValue() == null){ consulta.setDataInicial(null); }
        else{ consulta.setDataInicial(ConverteData.getDateDeString((String)campoPesquisaDataInicial.getValue())); }
        
        if(campoPesquisaDataFinal.getValue() == null){ consulta.setDataFinal(null); }
        else{ consulta.setDataFinal(ConverteData.getDateDeString((String)campoPesquisaDataFinal.getValue())); }
        
        if(campoPesquisaHoraInicial.getValue() == null){ consulta.setHoraInicial(null); }
        else{ consulta.setHoraInicial(ConverteData.getTimeDeString((String)campoPesquisaHoraInicial.getValue())); }
        
        if(campoPesquisaHoraFinal.getValue() == null){ consulta.setHoraFinal(null); }
        else{ consulta.setHoraFinal(ConverteData.getTimeDeString((String)campoPesquisaHoraFinal.getValue())); }
       
        if(checkContatos.isSelected() && checkGrupos.isSelected()){
            consulta.setTipo("T");
            consulta.setContato(null);
        }
        else if(checkContatos.isSelected()){
            consulta.setTipo("C");
            consulta.setContato(null);
        }
        else if(checkGrupos.isSelected()){
            consulta.setTipo("G");
            consulta.setContato(null);
        }     
        else {
            consulta.setContato(contatoSelecionado);
        }
    }
    
    
    private boolean verificaCamposPreenchidos(){
        boolean verifica = true;
        
        if(campoPesquisaPalavra.getText().isEmpty() && campoPesquisaDataInicial.getValue() == null
           && campoPesquisaDataFinal.getValue() == null && campoPesquisaHoraInicial.getValue() == null 
           && campoPesquisaHoraFinal.getValue() == null){
            verifica = false;
        }
        return verifica;
    }
    
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipalDispositivo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoResultadoConversa;
    private javax.swing.JFormattedTextField campoPesquisaDataFinal;
    private javax.swing.JFormattedTextField campoPesquisaDataInicial;
    private javax.swing.JFormattedTextField campoPesquisaHoraFinal;
    private javax.swing.JFormattedTextField campoPesquisaHoraInicial;
    private javax.swing.JTextField campoPesquisaPalavra;
    private javax.swing.JCheckBox checkContatos;
    private javax.swing.JCheckBox checkGrupos;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JComboBox<Object> comboResultado;
    private javax.swing.JMenuItem itemExcluir;
    private javax.swing.JMenuItem itemGerarRelatorio;
    private javax.swing.JMenuItem itemInformacaoDispositivo;
    private javax.swing.JMenuItem itemMenusRelatorios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jListContatos;
    private javax.swing.JList<String> jListGrupos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JLabel labelDispositivo;
    private javax.swing.JLabel labelModelo;
    private javax.swing.JLabel labelTotalContatos;
    private javax.swing.JLabel labelTotalGrupos;
    private javax.swing.JLabel labelTotalMensagens;
    private javax.swing.JLabel labelVersaoAndroid;
    private javax.swing.JMenu menuExibir;
    private javax.swing.JMenu menuRelatorios;
    private javax.swing.JMenu menuTimeLine;
    private javax.swing.JPanel painelContatos;
    private javax.swing.JPanel painelConversa;
    private javax.swing.JPanel painelFiltros;
    private javax.swing.JPanel painelInformacao;
    private javax.swing.JPanel painelResultado;
    private javax.swing.JScrollPane scrollPaneJListContatos;
    private javax.swing.JScrollPane scrollPaneJListGrupos;
    private javax.swing.JScrollPane scrollPaneTabelaConversa;
    private javax.swing.JTable tabelaMensagem;
    // End of variables declaration//GEN-END:variables

private class TextAreaCellRenderer extends JTextArea implements TableCellRenderer {  
  
    public TextAreaCellRenderer(List<Mensagem> mensagens) {  
        setLineWrap(true);  
        setWrapStyleWord(true);  
        setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N  
        setMargin(new java.awt.Insets(5, 5, 10, 5));
    }  
  
    
    @Override
    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        Mensagem m = mensagens.get(row);
        
        if(m.isKey_from_me()){ // se for para mim, deixa o fundo verde
            if(column == 0 ){ // se for a primeira coluna, informa a data e hora / fundo branco e letra menor
                setBackground(Color.white);
                setFont(new java.awt.Font("Arial", 0, 10)); 
            }
            else{ // sen√£o, fundo verde e letra maior
                setBackground(new Color(99,186,151));
                setFont(new java.awt.Font("Arial", 0, 13)); 
            }
        }
        
        else{ // se a mensagem for recebida, fundo banco e letra maior
            if(column == 0){ // se for a primeira coluna, letra maior
                setBackground(new Color(240,235,180));
                setFont(new java.awt.Font("Arial", 0, 13)); 
            }
            else{ // se for a segunda coluna, significa que informa data e hora, letra menor
                setBackground(Color.white);
                setFont(new java.awt.Font("Arial", 0, 10)); 
            }
        }
        
        
        this.setText(value.toString());
        setText((value == null) ? "" : value.toString());  
        setSize(table.getColumnModel().getColumn(column).getWidth(),  
                getPreferredSize().height);  

        if (table.getRowHeight(row) < getPreferredSize().height+5) {  
            table.setRowHeight(row, getPreferredSize().height +5);  
        }  

        return this;  
    }
}



}
